{"ast":null,"code":"var _jsxFileName = \"/home/m6d/Documents/composable-styled-components/src/components/Navigation/Head/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport PropTypes from \"prop-types\";\nconst {\n  LOCALHOST\n} = process.env;\n\nconst Header = ({\n  children,\n  description,\n  keywords,\n  title,\n  type,\n  url\n}) => __jsx(Head, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, __jsx(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, title, \" - Project Aeon\"), __jsx(\"link\", {\n  rel: \"canonical\",\n  href: `${LOCALHOST}/${url}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}), keywords && __jsx(\"meta\", {\n  name: \"keywords\",\n  content: keywords,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 18\n  }\n}), __jsx(\"meta\", {\n  name: \"description\",\n  content: description,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), __jsx(\"meta\", {\n  property: \"og:description\",\n  content: description,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), __jsx(\"meta\", {\n  property: \"og:url\",\n  content: `${LOCALHOST}/${url}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}), __jsx(\"meta\", {\n  property: \"og:type\",\n  content: type,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}), children);\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  keywords: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  type: PropTypes.string\n};\nHeader.defaultProps = {\n  description: \"Official website for... something.\",\n  type: \"website\"\n};\nexport default Header;","map":{"version":3,"sources":["/home/m6d/Documents/composable-styled-components/src/components/Navigation/Head/index.js"],"names":["Head","PropTypes","LOCALHOST","process","env","Header","children","description","keywords","title","type","url","propTypes","node","string","oneOfType","arrayOf","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAgBC,OAAO,CAACC,GAA9B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,IAA1C;AAAgDC,EAAAA;AAAhD,CAAD,KACb,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQF,KAAR,oBADF,EAEE;AAAM,EAAA,GAAG,EAAC,WAAV;AAAsB,EAAA,IAAI,EAAG,GAAEP,SAAU,IAAGS,GAAI,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGGH,QAAQ,IAAI;AAAM,EAAA,IAAI,EAAC,UAAX;AAAsB,EAAA,OAAO,EAAEA,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHf,EAIE;AAAM,EAAA,IAAI,EAAC,aAAX;AAAyB,EAAA,OAAO,EAAED,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE;AAAM,EAAA,QAAQ,EAAC,gBAAf;AAAgC,EAAA,OAAO,EAAEA,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME;AAAM,EAAA,QAAQ,EAAC,QAAf;AAAwB,EAAA,OAAO,EAAG,GAAEL,SAAU,IAAGS,GAAI,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOE;AAAM,EAAA,QAAQ,EAAC,SAAf;AAAyB,EAAA,OAAO,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,EAQGJ,QARH,CADF;;AAaAD,MAAM,CAACO,SAAP,GAAmB;AACjBN,EAAAA,QAAQ,EAAEL,SAAS,CAACY,IADH;AAEjBN,EAAAA,WAAW,EAAEN,SAAS,CAACa,MAFN;AAGjBN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,SAAV,CAAoB,CAC5Bd,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACa,MAA5B,CAD4B,EAE5Bb,SAAS,CAACa,MAFkB,CAApB,CAHO;AAOjBL,EAAAA,KAAK,EAAER,SAAS,CAACa,MAAV,CAAiBG,UAPP;AAQjBN,EAAAA,GAAG,EAAEV,SAAS,CAACa,MARE;AASjBJ,EAAAA,IAAI,EAAET,SAAS,CAACa;AATC,CAAnB;AAYAT,MAAM,CAACa,YAAP,GAAsB;AACpBX,EAAAA,WAAW,EAAE,oCADO;AAEpBG,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeL,MAAf","sourcesContent":["import Head from \"next/head\";\nimport PropTypes from \"prop-types\";\n\nconst { LOCALHOST } = process.env;\n\nconst Header = ({ children, description, keywords, title, type, url }) => (\n  <Head>\n    <title>{title} - Project Aeon</title>\n    <link rel=\"canonical\" href={`${LOCALHOST}/${url}`} />\n    {keywords && <meta name=\"keywords\" content={keywords} />}\n    <meta name=\"description\" content={description} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:url\" content={`${LOCALHOST}/${url}`} />\n    <meta property=\"og:type\" content={type} />\n    {children}\n  </Head>\n);\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  keywords: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string\n  ]),\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  type: PropTypes.string\n};\n\nHeader.defaultProps = {\n  description: \"Official website for... something.\",\n  type: \"website\"\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}