{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      color: \", \";\\n      background: darkred;\\n      font-size: 16px;\\n\\n      &:hover {\\n        color: \", \";\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css, extend, setDisplayName, withProps, withStyles } from \"~lib\";\nimport Button from \"~components/Button\";\nvar InterpolatedButton = extend(setDisplayName(\"Interpolated Button\"), withProps({\n  resize: false,\n  onClick: null\n}), withStyles(css(_templateObject(), function (props) {\n  return props.resize ? \"pink\" : \"limegreen\";\n}, function (props) {\n  return props.resize ? \"red\" : \"darkgrey\";\n})))(Button);\nexport default InterpolatedButton;","map":{"version":3,"sources":["/home/m6d/Documents/composable-styled-components/src/components/Body/InterpolatedButton/index.js"],"names":["css","extend","setDisplayName","withProps","withStyles","Button","InterpolatedButton","resize","onClick","props"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,cAAtB,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,MAAnE;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,IAAMC,kBAAkB,GAAGL,MAAM,CAC/BC,cAAc,CAAC,qBAAD,CADiB,EAE/BC,SAAS,CAAC;AACRI,EAAAA,MAAM,EAAE,KADA;AAERC,EAAAA,OAAO,EAAE;AAFD,CAAD,CAFsB,EAM/BJ,UAAU,CACRJ,GADQ,oBAEG,UAAAS,KAAK;AAAA,SAAKA,KAAK,CAACF,MAAN,GAAe,MAAf,GAAwB,WAA7B;AAAA,CAFR,EAOK,UAAAE,KAAK;AAAA,SAAKA,KAAK,CAACF,MAAN,GAAe,KAAf,GAAuB,UAA5B;AAAA,CAPV,EANqB,CAAN,CAiBzBF,MAjByB,CAA3B;AAmBA,eAAeC,kBAAf","sourcesContent":["import { css, extend, setDisplayName, withProps, withStyles } from \"~lib\";\nimport Button from \"~components/Button\";\n\nconst InterpolatedButton = extend(\n  setDisplayName(\"Interpolated Button\"),\n  withProps({\n    resize: false,\n    onClick: null\n  }),\n  withStyles(\n    css`\n      color: ${props => (props.resize ? \"pink\" : \"limegreen\")};\n      background: darkred;\n      font-size: 16px;\n\n      &:hover {\n        color: ${props => (props.resize ? \"red\" : \"darkgrey\")};\n      }\n    `\n  )\n)(Button);\n\nexport default InterpolatedButton;\n"]},"metadata":{},"sourceType":"module"}