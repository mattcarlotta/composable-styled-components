{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createFactory } from \"../createFactory\";\nimport { getDisplayName } from \"../displayName\";\nexport const nest = (...Components) => {\n  const factories = Components.map(createFactory);\n\n  const Nest = (_ref) => {\n    let {\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return factories.reduceRight((child, factory) => factory(props, child), children);\n  };\n\n  if (true) {\n    const displayNames = Components.map(getDisplayName);\n    Nest.displayName = `nest(${displayNames.join(\", \")})`;\n  }\n\n  return Nest;\n};","map":{"version":3,"sources":["/home/m6d/Documents/composable-styled-components/lib/nest/index.js"],"names":["createFactory","getDisplayName","nest","Components","factories","map","Nest","children","props","reduceRight","child","factory","displayNames","displayName","join"],"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC,GAAGC,UAAJ,KAAmB;AACrC,QAAMC,SAAS,GAAGD,UAAU,CAACE,GAAX,CAAeL,aAAf,CAAlB;;AACA,QAAMM,IAAI,GAAG;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,QAAgBC,KAAhB;;AAAA,WACXJ,SAAS,CAACK,WAAV,CAAsB,CAACC,KAAD,EAAQC,OAAR,KAAoBA,OAAO,CAACH,KAAD,EAAQE,KAAR,CAAjD,EAAiEH,QAAjE,CADW;AAAA,GAAb;;AAGA,YAA2C;AACzC,UAAMK,YAAY,GAAGT,UAAU,CAACE,GAAX,CAAeJ,cAAf,CAArB;AACAK,IAAAA,IAAI,CAACO,WAAL,GAAoB,QAAOD,YAAY,CAACE,IAAb,CAAkB,IAAlB,CAAwB,GAAnD;AACD;;AAED,SAAOR,IAAP;AACD,CAXM","sourcesContent":["import { createFactory } from \"../createFactory\";\nimport { getDisplayName } from \"../displayName\";\n\nexport const nest = (...Components) => {\n  const factories = Components.map(createFactory);\n  const Nest = ({ children, ...props }) =>\n    factories.reduceRight((child, factory) => factory(props, child), children);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const displayNames = Components.map(getDisplayName);\n    Nest.displayName = `nest(${displayNames.join(\", \")})`;\n  }\n\n  return Nest;\n};\n"]},"metadata":{},"sourceType":"module"}